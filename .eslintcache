[{"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\index.js":"1","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\App.js":"2","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\reportWebVitals.js":"3","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\MainComponent.js":"4","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\DishDetailComponent.js":"5","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\MenuComponent.js":"6","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\FooterComponent.js":"7","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\HeaderComponent.js":"8","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\ContactComponent.js":"9","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\HomeComponent.js":"10","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\promotions.js":"11","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\dishes.js":"12","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\comments.js":"13","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\leaders.js":"14","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\AboutComponent.js":"15","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\configureStore.js":"16","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\leaders.js":"17","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\promotions.js":"18","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\comments.js":"19","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\dishes.js":"20"},{"size":643,"mtime":1608903561765,"results":"21","hashOfConfig":"22"},{"size":547,"mtime":1609229816770,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2228,"mtime":1609230132880,"results":"25","hashOfConfig":"22"},{"size":6569,"mtime":1609412436375,"results":"26","hashOfConfig":"22"},{"size":1081,"mtime":1608960580270,"results":"27","hashOfConfig":"22"},{"size":2799,"mtime":1608921057800,"results":"28","hashOfConfig":"22"},{"size":5590,"mtime":1609412440489,"results":"29","hashOfConfig":"22"},{"size":10777,"mtime":1609408715252,"results":"30","hashOfConfig":"22"},{"size":1134,"mtime":1608923505979,"results":"31","hashOfConfig":"22"},{"size":445,"mtime":1608922718531,"results":"32","hashOfConfig":"22"},{"size":1490,"mtime":1608922699423,"results":"33","hashOfConfig":"22"},{"size":4280,"mtime":1608922708833,"results":"34","hashOfConfig":"22"},{"size":2382,"mtime":1608922725733,"results":"35","hashOfConfig":"22"},{"size":4318,"mtime":1608978091877,"results":"36","hashOfConfig":"22"},{"size":777,"mtime":1609475663069,"results":"37","hashOfConfig":"22"},{"size":185,"mtime":1609475586434,"results":"38","hashOfConfig":"22"},{"size":197,"mtime":1609475603978,"results":"39","hashOfConfig":"22"},{"size":191,"mtime":1609475880122,"results":"40","hashOfConfig":"22"},{"size":181,"mtime":1609475899647,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"j4eq1h",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\index.js",[],["86","87"],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\App.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\reportWebVitals.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\MainComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\DishDetailComponent.js",["88","89","90"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,\r\n    ModalHeader, ModalBody, Label, Row, Col\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nfunction RenderComments({ dishComments }) {\r\n    const comments = dishComments.map((comment) => {\r\n        return (\r\n            <div className=\"container\" key={comment.id}>\r\n                <div>\r\n                    <p>\r\n                        {comment.comment}\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>\r\n                        --{comment.author} ,{comment.date}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h1>\r\n                Comments\r\n        </h1>\r\n            <div>\r\n                {comments}\r\n                <CommentForm />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst DishDetail = (props) => {\r\n    if (props.dish != null) {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments dishComments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={this.toggleModal}><span className=\"fa fa-edit \"></span> Submit Commets</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Label htmlFor=\"yourname\">Rating</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col >\r\n                                    <Control.select model=\".rating\" name=\"Rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"yourname\">First Name</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\MenuComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\FooterComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\HeaderComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\ContactComponent.js",["91","92","93","94","95","96","97","98"],"import React from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends React.Component {\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\HomeComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\promotions.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\dishes.js",[],["99","100"],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\comments.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\shared\\leaders.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\components\\AboutComponent.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\configureStore.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\leaders.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\promotions.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\comments.js",[],"C:\\Users\\akshay.rathi\\Desktop\\React\\Coursera\\ReactCoursera\\src\\redux\\dishes.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":112,"column":37,"nodeType":"107","endLine":113,"endColumn":66},{"ruleId":"105","severity":1,"message":"108","line":125,"column":37,"nodeType":"107","endLine":131,"endColumn":39},{"ruleId":"105","severity":1,"message":"109","line":147,"column":37,"nodeType":"107","endLine":149,"endColumn":68},{"ruleId":"110","severity":1,"message":"111","line":60,"column":29,"nodeType":"107","endLine":60,"endColumn":71},{"ruleId":"105","severity":1,"message":"108","line":74,"column":37,"nodeType":"107","endLine":80,"endColumn":39},{"ruleId":"105","severity":1,"message":"108","line":96,"column":37,"nodeType":"107","endLine":102,"endColumn":39},{"ruleId":"105","severity":1,"message":"108","line":118,"column":37,"nodeType":"107","endLine":124,"endColumn":39},{"ruleId":"105","severity":1,"message":"108","line":141,"column":37,"nodeType":"107","endLine":147,"endColumn":39},{"ruleId":"105","severity":1,"message":"112","line":163,"column":45,"nodeType":"107","endLine":165,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":171,"column":37,"nodeType":"107","endLine":172,"endColumn":66},{"ruleId":"105","severity":1,"message":"109","line":181,"column":37,"nodeType":"107","endLine":183,"endColumn":68},{"ruleId":"101","replacedBy":"113"},{"ruleId":"103","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["115"],["116"],"no-global-assign","no-unsafe-negation"]